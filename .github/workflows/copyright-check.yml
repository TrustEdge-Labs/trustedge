# Copyright (c) 2025 John Turner
# MPL-2.0: https://mozilla.org/MPL/2.0/
# Project: trustedge — Privacy and trust at the edge.

name: Copyright Header Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  copyright-check:
    runs-on: ubuntu-latest

    permissions:
      contents: write
  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
      
    - name: Check and fix copyright headers
      run: |
        #!/bin/bash
        set -e
        
        # Colors for output
        RED='\033[0;31m'
        GREEN='\033[0;32m'
        YELLOW='\033[1;33m'
        NC='\033[0m' # No Color
        
        echo "● Checking copyright headers..."
        
        ERRORS=0
        FIXED=0
        
        # Function to check and fix copyright header
        check_and_fix_file() {
            local file="$1"
            local header_type="$2"
            
            # Check for any valid copyright pattern
            if ! head -10 "$file" | grep -qE "Copyright \(c\) 2025 (John Turner|.*Contributors|.*)" ; then
                echo -e "${RED}✖ Missing copyright header: $file${NC}"
                
                # Create appropriate header based on file type
                case "$header_type" in
                    "rust")
                        HEADER=$'//\n// Copyright (c) 2025 John Turner\n// This source code is subject to the terms of the Mozilla Public License, v. 2.0.\n// If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/\n//\n// Project: trustedge — Privacy and trust at the edge.\n//\n\n'
                        ;;
                    "markdown")
                        HEADER=$'<!--\nCopyright (c) 2025 John Turner\nMPL-2.0: https://mozilla.org/MPL/2.0/\nProject: trustedge — Privacy and trust at the edge.\nGitHub: https://github.com/johnzilla/trustedge\n-->\n\n'
                        ;;
                    "yaml")
                        HEADER=$'# Copyright (c) 2025 John Turner\n# MPL-2.0: https://mozilla.org/MPL/2.0/\n# Project: trustedge — Privacy and trust at the edge.\n\n'
                        ;;
                esac
                
                # Add header to file
                echo -e "$HEADER" > "${file}.tmp"
                cat "$file" >> "${file}.tmp"
                mv "${file}.tmp" "$file"
                
                echo -e "${GREEN}✔ Added copyright header to: $file${NC}"
                FIXED=$((FIXED + 1))
            else
                echo -e "${GREEN}✔ Copyright header present: $file${NC}"
            fi
        }
        
        # Check Rust files
        echo -e "${YELLOW}● Checking Rust files...${NC}"
        find . -name "*.rs" -not -path "./target/*" -not -path "./.git/*" | while read -r file; do
            check_and_fix_file "$file" "rust"
        done
        
        # Check Markdown files (excluding auto-generated ones)
        echo -e "${YELLOW}● Checking Markdown files...${NC}"
        find . -name "*.md" -not -path "./.git/*" -not -name "CHANGELOG.md" | while read -r file; do
            check_and_fix_file "$file" "markdown"
        done
        
        # Check YAML files
        echo -e "${YELLOW}● Checking YAML/YML files...${NC}"
        find . -name "*.yml" -o -name "*.yaml" -not -path "./.git/*" | while read -r file; do
            check_and_fix_file "$file" "yaml"
        done
        
        # Check TOML files
        echo -e "${YELLOW}● Checking TOML files...${NC}"
        find . -name "*.toml" -not -path "./.git/*" | while read -r file; do
            check_and_fix_file "$file" "yaml"
        done
        
        echo "✔ Copyright check completed!"
        
    - name: Commit copyright header fixes
      if: always()
      run: |
        # Check if any files were modified
        if [ -n "$(git status --porcelain)" ]; then
            echo "⚠ Copyright headers were missing and have been added."
            echo "● Committing copyright header fixes..."
            
            git config --local user.email "action@github.com"
            git config --local user.name "Copyright Header Bot"
            git add .
            git commit -m "chore: add missing copyright headers [skip ci]"
            git push
        else
            echo "✔ All files have proper copyright headers!"
        fi

    - name: Verify final state
      run: |
        echo "● Final verification of copyright headers..."
        MISSING=0
        
        # Final check for any missing headers
        find . -name "*.rs" -o -name "*.md" -o -name "*.yml" -o -name "*.yaml" -o -name "*.toml" \
            -not -path "./target/*" -not -path "./.git/*" -not -name "CHANGELOG.md" | while read -r file; do
            if ! head -10 "$file" | grep -qE "Copyright \(c\) 2025 (John Turner|.*Contributors|.*)" ; then
                echo "✖ Still missing copyright header: $file"
                MISSING=$((MISSING + 1))
            fi
        done
        
        if [ $MISSING -eq 0 ]; then
            echo "✔ All copyright headers are properly in place!"
        else
            echo "✖ $MISSING files still missing copyright headers"
            exit 1
        fi
